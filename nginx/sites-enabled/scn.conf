proxy_cache_path /scnxplorer_cache levels=1:2 keys_zone=my_cache:10m max_size=10g
                 inactive=60m use_temp_path=off;

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;



	server_name _;

	gzip on;
    gzip_min_length 1000;
    gzip_comp_level 5;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain
               text/css
               text/javascript
               application/json
               image/gif
               image/png
               image/jpeg
               image/svg+xml
               image/x-icon;

    location /static/ {
        alias /scn/scn_js/prod/static/;
        gzip_static on;
        expires max;
        add_header Cache-Control public;
      }

    location /var/datasets/ {
        alias /var/datasets/;
        gzip_static on;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 3;
        proxy_cache_use_stale error timeout updating http_500 http_502
                              http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        add_header Cache-Control public;
    }

    location /build/ {
        alias /scn/scn_js/prod/;
        gzip_static on;
        expires max;
        add_header Cache-Control public;
      }

    location /scn/getPublicDatasets {
        proxy_cache_revalidate on;
        proxy_cache my_cache;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 1m;
        proxy_pass http://web:8080;
    }

    location /scn/getFiles {
        proxy_cache_revalidate on;
        proxy_cache my_cache;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 1m;
        proxy_pass http://web:8080;
    }

	location /scn/ {
	    proxy_cache_revalidate on;
        proxy_cache my_cache;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 60m;
        proxy_pass http://web:8080;
    }
    location /scn_fs/ {
	    proxy_cache_revalidate on;
        proxy_cache my_cache;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 60m;
        proxy_pass http://fs:8081;
    }

    location /perform-enrichment {
        proxy_pass http://genequery:8423;
    }

    location /docs/ {
        alias /scn/docs/;
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }

    location / {
        root   /scn/scn_js/prod;
        index  index.html;
    }

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
